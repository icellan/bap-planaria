"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0}),exports.BAP=void 0;var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator")),_asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator")),_simplSchema=_interopRequireDefault(require("simpl-schema")),_collection=require("../lib/collection"),_attest=require("../attest"),_id=require("../id"),BAP=new _collection.Collection("bap",new _simplSchema["default"]({block:{type:_simplSchema["default"].Integer,label:"Block number this transaction was mined into - null if still in mempool",optional:!0},type:{type:String,label:"Type of BAP transaction (ID, ATTEST, DATA, ALIAS, ...)",optional:!1},hash:{type:String,label:"ID key or attestation hash",optional:!1},sequence:{type:String,label:"Sequences number of the attestation, or the address of the ID",optional:!1},signatureAddress:{type:String,label:"Bitcoin address this bap transaction was signed with",optional:!1},data:{type:String,label:"Optional data that was appended to this BAP transaction",optional:!0},timestamp:{type:_simplSchema["default"].Integer,label:"timestamp the transaction was broadcast - if available",optional:!0},processed:{type:Boolean}}));exports.BAP=BAP,BAP.after("updateOne",function(){var a=(0,_asyncToGenerator2["default"])(_regenerator["default"].mark(function a(b,c,d){var e;return _regenerator["default"].wrap(function(a){for(;;)switch(a.prev=a.next){case 0:if(!(!0===d.upsert&&c.$set&&c.$set.type&&c.$set.hash&&c.$set.sequence&&c.$set.signatureAddress)){a.next=27;break}if(e=c.$set.type,"ATTEST"!==e){a.next=7;break}return a.next=5,(0,_attest.handleAttestationTransaction)(c.$set);case 5:a.next=25;break;case 7:if("ID"!==e){a.next=12;break}return a.next=10,(0,_id.handleIDTransaction)(c.$set);case 10:a.next=25;break;case 12:if("REVOKE"!==e){a.next=17;break}return a.next=15,(0,_attest.handleRevokeTransaction)(c.$set);case 15:a.next=25;break;case 17:if("ALIAS"!==e){a.next=22;break}return a.next=20,(0,_id.handleAliasTransaction)(c.$set);case 20:a.next=25;break;case 22:if("DATA"!==e){a.next=25;break}return a.next=25,(0,_attest.handleDataTransaction)(c.$set);case 25:return a.next=27,BAP.update({_id:b._id},{$set:{processed:!0}});case 27:case"end":return a.stop();}},a)}));return function(){return a.apply(this,arguments)}}());